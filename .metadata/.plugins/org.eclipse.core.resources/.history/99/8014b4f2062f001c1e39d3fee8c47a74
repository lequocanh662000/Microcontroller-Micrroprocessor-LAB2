///*
// * 8x8matrix_display.c
// *
// *  Created on: Oct 8, 2021
// *      Author: Dell
// */
//#include "main.h"
//#include "8x8matrix_display.h"
//#define 	NUMBER_LED_MATRIX		1
//#define 	SIZE_OF_MATRIX			8
//
//static uint8_t matrix8x8LEDConversion[8] = {0xff, 0x03, 0x01, 0xcc, 0xcc, 0x01, 0x03, 0xff}; // show letter A
//
////static uint8_t column_buffer[] = {0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80};
//uint8_t row_buffer[]    = {0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
//
//
//static uint16_t mColumnControlPin[SIZE_OF_MATRIX] = {
//		DISABLE_COL_8x8_1, DISABLE_COL_8x8_2,
//		DISABLE_COL_8x8_3, DISABLE_COL_8x8_4,
//		DISABLE_COL_8x8_5, DISABLE_COL_8x8_6,
//		DISABLE_COL_8x8_7, DISABLE_COL_8x8_8
//};
//
//static GPIO_TypeDef * mColumnControlPort[SIZE_OF_MATRIX] = {
//		DISABLE_COL_8x8_1_PORT, DISABLE_COL_8x8_2_PORT,
//		DISABLE_COL_8x8_3_PORT, DISABLE_COL_8x8_4_PORT,
//		DISABLE_COL_8x8_5_PORT, DISABLE_COL_8x8_6_PORT,
//		DISABLE_COL_8x8_7_PORT, DISABLE_COL_8x8_8_PORT
//};
//
//static uint16_t mRowControlPin[SIZE_OF_MATRIX] = {
//		ROW1,ROW2,
//		ROW3,ROW4,
//		ROW5,ROW6,
//		ROW7,ROW8,
//};
//
//static GPIO_TypeDef * mRowControlPort[SIZE_OF_MATRIX] = {
//		ROW1_PORT, ROW1_POR2,
//		ROW1_POR3, ROW1_POR4,
//		ROW1_POR5, ROW1_POR6,
//		ROW1_POR7, ROW1_POR8
//};
//
//
//uint8_t update_row_matrix_8x8_led_buffer(int column_index){
//	if(column_index > 7 | column_index < 0)return 0;
//	row_buffer[column_index] = matrix8x8LEDConversion[column_index];
//	return 1;
//}
//
//void clearMatrix(void){
//	for(int i = 0; i<8; i++){
//		HAL_GPIO_WritePin(mRowControlPort[i], mRowControlPin[i], SET);
//	}
//}
//
//void matrix8x8_led_driver(void);
//
//
//
//
//
//
//
////
////uint8_t RowMatrix_buffer[8] = {0xff, 0x03, 0x01, 0xcc, 0xcc, 0x01, 0x03, 0xff};
////
//// void updateLEDMatrix(int index){
////	 uint32_t saveState = GPIOB->ODR;
////	 GPIOB->ODR = saveState|0x0001;
////	 switch (index){
////	 	 case 0:
////	 		 GPIOB->ODR = RowMatrix_buffer[0];
////	 		 break;
////	 	 case 1:
////	 		 GPIOB->ODR = RowMatrix_buffer[1];
////	 		 break;
////	 	 case 2:
////	 		 GPIOB->ODR = RowMatrix_buffer[2];
////	 		 break;
////	 	 case 3:
////	 		 GPIOB->ODR = RowMatrix_buffer[3];
////	 		 break;
////	 	 case 4:
////	 		 GPIOB->ODR = RowMatrix_buffer[4];
////	 		 break;
////	 	 case 5:
////	 		 GPIOB->ODR = RowMatrix_buffer[5];
////	 		 break;
////	 	 case 6:
////	 		GPIOB->ODR = RowMatrix_buffer[6];
////	 		 break;
////	 	 case 7:
////	 		GPIOB->ODR = RowMatrix_buffer[7];
////	 		 break;
////	 	 default:
////	 		 break;
////	 }
//// }
////
//// void columnScan(int index){
////	 switch (index){
////	 	 	 case 0:
////	 	 		 HAL_GPIO_WritePin(ENABLE_COL_8x8_8_PORT, ENABLE_COL_8x8_8, SET);
////	 	 		 HAL_GPIO_WritePin(ENABLE_COL_8x8_1_PORT, ENABLE_COL_8x8_1, RESET);
////
////	 	 		 break;
////	 	 	 case 1:
////	 	 		 HAL_GPIO_WritePin(ENABLE_COL_8x8_1_PORT, ENABLE_COL_8x8_1, SET);
////	 	 		 HAL_GPIO_WritePin(ENABLE_COL_8x8_2_PORT, ENABLE_COL_8x8_2, RESET);
////
////	 	 		 break;
////	 	 	 case 2:
////	 	 		 HAL_GPIO_WritePin(ENABLE_COL_8x8_2_PORT, ENABLE_COL_8x8_2, SET);
////	 	 		 HAL_GPIO_WritePin(ENABLE_COL_8x8_3_PORT, ENABLE_COL_8x8_3, RESET);
////
////	 	 		 break;
////	 	 	 case 3:
////	 	 		 HAL_GPIO_WritePin(ENABLE_COL_8x8_3_PORT, ENABLE_COL_8x8_3, SET);
////	 	 		 HAL_GPIO_WritePin(ENABLE_COL_8x8_4_PORT, ENABLE_COL_8x8_4, RESET);
////
////	 	 		 break;
////	 	 	 case 4:
////	 	 		 HAL_GPIO_WritePin(ENABLE_COL_8x8_4_PORT, ENABLE_COL_8x8_4, SET);
////	 	 		 HAL_GPIO_WritePin(ENABLE_COL_8x8_5_PORT, ENABLE_COL_8x8_5, RESET);
////
////	 	 		 break;
////	 	 	 case 5:
////	 	 		 HAL_GPIO_WritePin(ENABLE_COL_8x8_5_PORT, ENABLE_COL_8x8_5, SET);
////	 	 		 HAL_GPIO_WritePin(ENABLE_COL_8x8_6_PORT, ENABLE_COL_8x8_6, RESET);
////
////	 	 		 break;
////	 	 	 case 6:
////	 	 		 HAL_GPIO_WritePin(ENABLE_COL_8x8_6_PORT, ENABLE_COL_8x8_6, SET);
////	 	 		 HAL_GPIO_WritePin(ENABLE_COL_8x8_7_PORT, ENABLE_COL_8x8_7, RESET);
////
////	 	 		 break;
////	 	 	 case 7:
////	 	 		 HAL_GPIO_WritePin(ENABLE_COL_8x8_7_PORT, ENABLE_COL_8x8_7, SET);
////	 	 		 HAL_GPIO_WritePin(ENABLE_COL_8x8_8_PORT, ENABLE_COL_8x8_8, RESET);
////
////	 	 		 break;
////	 	 	 default:
////	 	 		 break;
////	 }
//// }
